# -*- coding: utf-8 -*-
"""dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r1FiYTeQcB_i5y-tP2U0IE-8x1EomXpi
"""

### dataset.py
import pandas as pd
import torch
from torch.utils.data import Dataset
from model import COVIDTweetClassifier

class TweetDataset(Dataset):
    def __init__(self, texts, features, labels, tokenizer, max_len=128):
        self.texts = texts
        self.features = features
        self.labels = labels
        self.tokenizer = tokenizer
        self.max_len = max_len

    def __getitem__(self, idx):
        encoding = self.tokenizer.encode_plus(
            self.texts[idx],
            max_length=self.max_len,
            padding='max_length',
            truncation=True,
            return_attention_mask=True,
            return_tensors='pt'
        )
        return {
            'input_ids': encoding['input_ids'].squeeze(),
            'attention_mask': encoding['attention_mask'].squeeze(),
            'features': self.features[idx],
            'labels': torch.tensor(self.labels[idx], dtype=torch.long)
        }

    def __len__(self):
        return len(self.texts)

def load_data(data_path):
    df = pd.read_csv(data_path, encoding='latin1')
    df['text'] = df['OriginalTweet'].str.strip()
    df['label'] = df['Sentiment'].map({
        'Extremely Negative': 0, 'Negative': 1,
        'Neutral': 2, 'Positive': 3, 'Extremely Positive': 4
    })
    features = [COVIDTweetClassifier.extract_features(text).numpy() for text in df['text']]
    return df['text'].tolist(), torch.tensor(features), df['label'].tolist()