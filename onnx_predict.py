# -*- coding: utf-8 -*-
"""onnx_predict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oWUVVxrJ1z2j0inTupaFkMbPp-KzMzkz
"""

import onnxruntime as ort
import numpy as np
from transformers import BertTokenizer
from model import COVIDTweetClassifier  # For feature extraction

class ONNXTweetPredictor:
    def __init__(self, onnx_model_path='covid_model.onnx'):
        self.session = ort.InferenceSession(onnx_model_path)
        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')
        self.class_map = {
            0: 'Extremely Negative', 1: 'Negative',
            2: 'Neutral', 3: 'Positive', 4: 'Extremely Positive'
        }

    def predict(self, text):
        features = COVIDTweetClassifier.extract_features(text).numpy()
        encoding = self.tokenizer.encode_plus(
            text,
            max_length=128,
            padding='max_length',
            truncation=True,
            return_tensors='np'
        )

        input_ids = encoding['input_ids'].astype(np.int64)
        attention_mask = encoding['attention_mask'].astype(np.int64)
        features = features.astype(np.float32).reshape(1, -1)

        outputs = self.session.run(
            None,
            {
                'input_ids': input_ids,
                'attention_mask': attention_mask,
                'features': features
            }
        )

        return self.class_map[np.argmax(outputs[0])]

if __name__ == '__main__':
    onnx_predictor = ONNXTweetPredictor()
    #print(onnx_predictor.predict("Vaccine distribution is going great!"))