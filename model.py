# -*- coding: utf-8 -*-
"""model.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sgpqLzgk8Wha5igxk9mGL6bmHK1QMi7v
"""

### model.py
import torch
import torch.nn as nn
from transformers import BertModel, BertTokenizer

class COVIDTweetClassifier(nn.Module):
    def __init__(self, num_classes=5, dropout=0.3):
        super().__init__()
        self.bert = BertModel.from_pretrained('bert-base-uncased')
        self.feature_layer = nn.Sequential(
            nn.Linear(768 + 3, 512),
            nn.ReLU(),
            nn.Dropout(dropout)
        )
        self.classifier = nn.Linear(512, num_classes)
        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')

    def forward(self, input_ids, attention_mask, features):
        bert_output = self.bert(input_ids, attention_mask).last_hidden_state[:, 0, :]
        combined = torch.cat([bert_output, features], dim=1)
        return self.classifier(self.feature_layer(combined))

    @staticmethod
    def extract_features(text):
        return torch.tensor([
            len(text.split()) / 100,
            text.count('!') + text.count('?'),
            1 if 'http' in text else 0
        ], dtype=torch.float32)